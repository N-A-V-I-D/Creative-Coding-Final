{"ast":null,"code":"const express = require('express');\n\nconst app = express();\n\nconst cheerio = require('cheerio');\n\nconst request = require('request');\n\nconst path = require('path');\n\napp.use(express.static('public'));\n\nfunction hitTheApi(word, language) {\n  return new Promise((resolve, reject) => {\n    const queriedWord = word;\n    const queriedLanguage = language || 'en';\n\n    if (!queriedWord) {\n      const rej = 'Word required!';\n      reject(rej);\n    } else {\n      console.log(queriedWord);\n\n      if (encodeURIComponent(queriedWord).includes('%20') && queriedLanguage === 'en') {\n        // res.header('Access-Control-Allow-Origin', '*')\n        const rej = 'Space should not contain in word';\n        return reject(rej);\n      }\n\n      var url;\n      var replaceDefine = {\n        hi: 'matlab',\n        tr: 'nedir'\n      };\n\n      if (queriedLanguage !== 'en') {\n        url = `https://www.google.co.in/search?hl=${queriedLanguage}&q=${replaceDefine[queriedLanguage] ? replaceDefine[queriedLanguage] : 'define'}+${queriedWord}`;\n        url = encodeURI(url);\n        request({\n          method: 'GET',\n          url: url,\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0'\n          }\n        }, function (err, response, body) {\n          if (err) {\n            return console.error(err);\n          }\n\n          const $ = cheerio.load(body);\n          var dictionary = {};\n          var word = $('div.dDoNo span').first().text();\n          var meaning;\n          var mainPart;\n          var definitions;\n\n          if (word.length < 1) {\n            // res.header('Access-Control-Allow-Origin', '*')\n            const rej = 'Word length should not less than 1';\n            reject(rej);\n          }\n\n          dictionary.word = $('div.dDoNo span').first().text();\n\n          if (!$('.lr_dct_spkr.lr_dct_spkr_off audio')) {\n            dictionary.pronunciation = 'https:' + $('.lr_dct_spkr.lr_dct_spkr_off audio')[0].attribs.src;\n            dictionary.pronunciation = dictionary.pronunciation.replace('--_gb', '--_us');\n          }\n\n          dictionary.phonetic = [];\n          $('.lr_dct_ph.XpoqFe').first().find('span').each(function (i, element) {\n            dictionary.phonetic.push($(this).text());\n          });\n          dictionary.meaning = {};\n          meaning = {}, definitions = $('.lr_dct_ent.vmod.XpoqFe'), mainPart = definitions.first().find('.lr_dct_sf_h');\n          mainPart.each(function (i, element) {\n            var type = $(this).find('i').text();\n            var selector = $('.lr_dct_sf_sens').eq(i).find(\"div[style='margin-left:20px'] > .PNlCoe\");\n            meaning[type] = [];\n            selector.each(function (i, element) {\n              var newDefinition = {};\n              var synonymsText;\n              var synonyms;\n              var example;\n              newDefinition.definition = $(this).find(\"div[data-dobid='dfn']\").text();\n              example = $(this).find('span.vmod .vk_gy').text();\n              synonymsText = $(this).find(\"div.vmod td.lr_dct_nyms_ttl + td > span:not([data-log-string='synonyms-more-click'])\").text();\n              synonyms = synonymsText.split(/,|;/).filter(synonym => synonym !== ' ' && synonym).map(function (item) {\n                return item.trim();\n              });\n\n              if (example.length > 0) {\n                newDefinition.example = example.replace(/(^\")|(\"$)/g, '');\n              }\n\n              if (synonyms.length > 0) {\n                newDefinition.synonyms = synonyms;\n              }\n\n              meaning[type].push(newDefinition);\n            });\n          });\n          dictionary.meaning = meaning;\n          Object.keys(dictionary).forEach(key => {\n            Array.isArray(dictionary[key]) && !dictionary[key].length && delete dictionary[key];\n          }); //   res.header('Content-Type', 'application/json')\n          //   res.header('Access-Control-Allow-Origin', '*')\n\n          resolve(JSON.stringify(dictionary, null, 4));\n        });\n      } else {\n        url = `https://www.lexico.com/en/definition/${queriedWord}`;\n        url = encodeURI(url);\n        request({\n          method: 'GET',\n          url: url,\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0'\n          }\n        }, function (err, response, body) {\n          if (err) {\n            return console.error(err);\n          }\n\n          const $ = cheerio.load(body);\n\n          if (!$('.hwg .hw').first()[0]) {\n            console.log($('.searchHeading').first().text());\n            console.log(queriedWord + ' is not present in Dictionary.'); // res.header('Access-Control-Allow-Origin', '*')\n\n            const rej = queriedWord + ' is not present in Dictionary.';\n            return reject(rej);\n          }\n\n          var dictionary = [];\n          var numberOfentryGroup;\n          var arrayOfEntryGroup = [];\n          var grambs = $('section.gramb');\n          var entryHead = $('.entryHead.primary_homograph');\n          let i;\n          let j = 0;\n\n          for (i = 0; i < entryHead.length; i++) {\n            arrayOfEntryGroup[i] = $('#' + entryHead[0].attribs.id + ' ~ .gramb').length - $('#' + entryHead[i].attribs.id + ' ~ .gramb').length;\n          }\n\n          arrayOfEntryGroup[i] = $('#' + entryHead[0].attribs.id + ' ~ .gramb').length;\n          numberOfentryGroup = arrayOfEntryGroup.length - 1;\n\n          for (i = 0; i < numberOfentryGroup; i++) {\n            var entry = {};\n            var word = $('.hwg .hw')[i].childNodes[0].nodeValue;\n            var phonetic = $('.pronSection.etym .pron .phoneticspelling')[i];\n            var pronunciation = $('.pronSection.etym .pron .pronunciations')[i];\n            var origin = $('.pronSection.etym').eq(i).prev().find('.senseInnerWrapper p').text();\n            entry.word = word;\n\n            if (phonetic) {\n              entry.phonetic = phonetic.childNodes[0] && phonetic.childNodes[0].data;\n            }\n\n            if (pronunciation) {\n              entry.pronunciation = $(pronunciation).find('a audio').attr('src');\n            }\n\n            origin && (entry.origin = origin);\n            entry.meaning = {};\n            const start = arrayOfEntryGroup[i];\n            const end = arrayOfEntryGroup[i + 1];\n\n            for (j = start; j < end; j++) {\n              var partofspeech = $(grambs[j]).find('.ps.pos .pos').text();\n              $(grambs[j]).find('.semb').each(function (j, element) {\n                var meaningArray = [];\n                $(element).find('> li').each(function (j, element) {\n                  var newDefinition = {};\n                  var item = $(element).find('> .trg');\n                  var definition = $(item).find(' > p > .ind').text();\n                  var example = $(item).find(' > .exg  > .ex > em').first().text();\n                  var synonymsText = $(item).find(' > .synonyms > .exg  > div').first().text();\n                  var synonyms = synonymsText.split(/,|;/).filter(synonym => synonym !== ' ' && synonym).map(function (item) {\n                    return item.trim();\n                  });\n\n                  if (definition.length === 0) {\n                    definition = $(item).find('.crossReference').first().text();\n                  }\n\n                  if (definition.length > 0) {\n                    newDefinition.definition = definition;\n                  }\n\n                  if (example.length > 0) {\n                    newDefinition.example = example.substring(1, example.length - 1);\n                  }\n\n                  if (synonyms.length > 0) {\n                    newDefinition.synonyms = synonyms;\n                  }\n\n                  meaningArray.push(newDefinition);\n                });\n\n                if (partofspeech.length === 0) {\n                  partofspeech = 'crossReference';\n                }\n\n                entry.meaning[partofspeech] = meaningArray.slice();\n              });\n            }\n\n            dictionary.push(entry);\n          }\n\n          Object.keys(dictionary).forEach(key => {\n            Array.isArray(dictionary[key]) && !dictionary[key].length && delete dictionary[key];\n          });\n\n          if ($('.hwg .hw').first()[0]) {\n            // res.header('Content-Type', 'application/json')\n            // res.header('Access-Control-Allow-Origin', '*')\n            resolve(JSON.parse(JSON.stringify(dictionary, null, 4)));\n          }\n        });\n      }\n    }\n  });\n}\n\nmodule.exports.search = hitTheApi; // app.listen(4000, function () {\n//   console.log('API is listening on http://localhost:4000')\n// })","map":{"version":3,"names":["express","require","app","cheerio","request","path","use","static","hitTheApi","word","language","Promise","resolve","reject","queriedWord","queriedLanguage","rej","console","log","encodeURIComponent","includes","url","replaceDefine","hi","tr","encodeURI","method","headers","err","response","body","error","$","load","dictionary","first","text","meaning","mainPart","definitions","length","pronunciation","attribs","src","replace","phonetic","find","each","i","element","push","type","selector","eq","newDefinition","synonymsText","synonyms","example","definition","split","filter","synonym","map","item","trim","Object","keys","forEach","key","Array","isArray","JSON","stringify","numberOfentryGroup","arrayOfEntryGroup","grambs","entryHead","j","id","entry","childNodes","nodeValue","origin","prev","data","attr","start","end","partofspeech","meaningArray","substring","slice","parse","module","exports","search"],"sources":["/Users/navid/Documents/Final Project 2/vocab/node_modules/google-dictionary-api/app.js"],"sourcesContent":["const express = require('express')\nconst app = express()\nconst cheerio = require('cheerio')\nconst request = require('request')\nconst path = require('path')\n\napp.use(express.static('public'))\n\nfunction hitTheApi (word, language) {\n  return new Promise((resolve, reject) => {\n    const queriedWord = word\n    const queriedLanguage = language || 'en'\n\n    if (!queriedWord) {\n      const rej = 'Word required!'\n      reject(rej)\n    } else {\n      console.log(queriedWord)\n\n      if (encodeURIComponent(queriedWord).includes('%20') && queriedLanguage === 'en') {\n        // res.header('Access-Control-Allow-Origin', '*')\n        const rej = 'Space should not contain in word'\n        return reject(rej)\n      }\n\n      var url\n      var replaceDefine = {\n        hi: 'matlab',\n        tr: 'nedir'\n      }\n\n      if (queriedLanguage !== 'en') {\n        url = `https://www.google.co.in/search?hl=${queriedLanguage}&q=${replaceDefine[queriedLanguage] ? replaceDefine[queriedLanguage] : 'define'}+${queriedWord}`\n        url = encodeURI(url)\n        request({\n          method: 'GET',\n          url: url,\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0'\n          }\n        }, function (err, response, body) {\n          if (err) {\n            return console.error(err)\n          }\n\n          const $ = cheerio.load(body)\n\n          var dictionary = {}\n          var word = $('div.dDoNo span').first().text()\n          var meaning\n          var mainPart\n          var definitions\n\n          if (word.length < 1) {\n            // res.header('Access-Control-Allow-Origin', '*')\n            const rej = 'Word length should not less than 1'\n            reject(rej)\n          }\n\n          dictionary.word = $('div.dDoNo span').first().text()\n\n          if (!$('.lr_dct_spkr.lr_dct_spkr_off audio')) {\n            dictionary.pronunciation = 'https:' + $('.lr_dct_spkr.lr_dct_spkr_off audio')[0].attribs.src\n            dictionary.pronunciation = dictionary.pronunciation.replace('--_gb', '--_us')\n          }\n\n          dictionary.phonetic = []\n          $('.lr_dct_ph.XpoqFe').first().find('span').each(function (i, element) {\n            dictionary.phonetic.push($(this).text())\n          })\n\n          dictionary.meaning = {}\n\n          meaning = {},\n          definitions = $('.lr_dct_ent.vmod.XpoqFe'),\n          mainPart = definitions.first().find('.lr_dct_sf_h')\n\n          mainPart.each(function (i, element) {\n            var type = $(this).find('i').text()\n            var selector = $('.lr_dct_sf_sens').eq(i).find(\"div[style='margin-left:20px'] > .PNlCoe\")\n\n            meaning[type] = []\n\n            selector.each(function (i, element) {\n              var newDefinition = {}\n              var synonymsText\n              var synonyms\n              var example\n\n              newDefinition.definition = $(this).find(\"div[data-dobid='dfn']\").text()\n              example = $(this).find('span.vmod .vk_gy').text()\n              synonymsText = $(this).find(\"div.vmod td.lr_dct_nyms_ttl + td > span:not([data-log-string='synonyms-more-click'])\").text()\n\n              synonyms = synonymsText.split(/,|;/).filter(synonym => synonym !== ' ' && synonym).map(function (item) {\n                return item.trim()\n              })\n\n              if (example.length > 0) { newDefinition.example = example.replace(/(^\")|(\"$)/g, '') }\n\n              if (synonyms.length > 0) { newDefinition.synonyms = synonyms }\n\n              meaning[type].push(newDefinition)\n            })\n          })\n\n          dictionary.meaning = meaning\n\n          Object.keys(dictionary).forEach(key => {\n            (Array.isArray(dictionary[key]) && !dictionary[key].length) && delete dictionary[key]\n          })\n\n          //   res.header('Content-Type', 'application/json')\n          //   res.header('Access-Control-Allow-Origin', '*')\n          resolve(JSON.stringify(dictionary, null, 4))\n        })\n      } else {\n        url = `https://www.lexico.com/en/definition/${queriedWord}`\n        url = encodeURI(url)\n\n        request({\n          method: 'GET',\n          url: url,\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:58.0) Gecko/20100101 Firefox/58.0'\n          }\n        }, function (err, response, body) {\n          if (err) {\n            return console.error(err)\n          }\n\n          const $ = cheerio.load(body)\n\n          if (!($('.hwg .hw').first()[0])) {\n            console.log($('.searchHeading').first().text())\n            console.log(queriedWord + ' is not present in Dictionary.')\n            // res.header('Access-Control-Allow-Origin', '*')\n            const rej = queriedWord + ' is not present in Dictionary.'\n            return reject(rej)\n          }\n\n          var dictionary = []\n          var numberOfentryGroup\n          var arrayOfEntryGroup = []\n          var grambs = $('section.gramb')\n          var entryHead = $('.entryHead.primary_homograph')\n\n          let i; let j = 0\n\n          for (i = 0; i < entryHead.length; i++) {\n            arrayOfEntryGroup[i] = $('#' + entryHead[0].attribs.id + ' ~ .gramb').length - $('#' + entryHead[i].attribs.id + ' ~ .gramb').length\n          }\n          arrayOfEntryGroup[i] = $('#' + entryHead[0].attribs.id + ' ~ .gramb').length\n\n          numberOfentryGroup = arrayOfEntryGroup.length - 1\n\n          for (i = 0; i < numberOfentryGroup; i++) {\n            var entry = {}\n            var word = $('.hwg .hw')[i].childNodes[0].nodeValue\n            var phonetic = $('.pronSection.etym .pron .phoneticspelling')[i]\n            var pronunciation = $('.pronSection.etym .pron .pronunciations')[i]\n            var origin = $('.pronSection.etym').eq(i).prev().find('.senseInnerWrapper p').text()\n\n            entry.word = word\n\n            if (phonetic) {\n              entry.phonetic = phonetic.childNodes[0] && phonetic.childNodes[0].data\n            }\n            if (pronunciation) {\n              entry.pronunciation = $(pronunciation).find('a audio').attr('src')\n            }\n\n            origin && (entry.origin = origin)\n\n            entry.meaning = {}\n\n            const start = arrayOfEntryGroup[i]\n            const end = arrayOfEntryGroup[i + 1]\n\n            for (j = start; j < end; j++) {\n              var partofspeech = $(grambs[j]).find('.ps.pos .pos').text()\n\n              $(grambs[j]).find('.semb').each(function (j, element) {\n                var meaningArray = []\n\n                $(element).find('> li').each(function (j, element) {\n                  var newDefinition = {}\n                  var item = $(element).find('> .trg')\n                  var definition = $(item).find(' > p > .ind').text()\n                  var example = $(item).find(' > .exg  > .ex > em').first().text()\n                  var synonymsText = $(item).find(' > .synonyms > .exg  > div').first().text()\n                  var synonyms = synonymsText.split(/,|;/).filter(synonym => synonym !== ' ' && synonym).map(function (item) {\n                    return item.trim()\n                  })\n\n                  if (definition.length === 0) {\n                    definition = $(item).find('.crossReference').first().text()\n                  }\n\n                  if (definition.length > 0) { newDefinition.definition = definition }\n\n                  if (example.length > 0) { newDefinition.example = example.substring(1, example.length - 1) }\n\n                  if (synonyms.length > 0) { newDefinition.synonyms = synonyms }\n\n                  meaningArray.push(newDefinition)\n                })\n\n                if (partofspeech.length === 0) { partofspeech = 'crossReference' }\n\n                entry.meaning[partofspeech] = meaningArray.slice()\n              })\n            }\n            dictionary.push(entry)\n          }\n\n          Object.keys(dictionary).forEach(key => {\n            (Array.isArray(dictionary[key]) && !dictionary[key].length) && delete dictionary[key]\n          })\n\n          if ($('.hwg .hw').first()[0]) {\n            // res.header('Content-Type', 'application/json')\n            // res.header('Access-Control-Allow-Origin', '*')\n            resolve(JSON.parse(JSON.stringify(dictionary, null, 4)))\n          }\n        })\n      }\n    }\n  })\n}\nmodule.exports.search = hitTheApi\n// app.listen(4000, function () {\n//   console.log('API is listening on http://localhost:4000')\n// })\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}