{"ast":null,"code":"module.exports = sortByProcedure;\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\n\nvar attributes = {\n  __proto__: null,\n  exists: 10,\n  equals: 8,\n  not: 7,\n  start: 6,\n  end: 6,\n  any: 5,\n  hyphen: 4,\n  element: 4\n};\n\nfunction sortByProcedure(arr) {\n  var procs = arr.map(getProcedure);\n\n  for (var i = 1; i < arr.length; i++) {\n    var procNew = procs[i];\n    if (procNew < 0) continue;\n\n    for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n      var token = arr[j + 1];\n      arr[j + 1] = arr[j];\n      arr[j] = token;\n      procs[j + 1] = procs[j];\n      procs[j] = procNew;\n    }\n  }\n}\n\nfunction getProcedure(token) {\n  var proc = procedure[token.type];\n\n  if (proc === procedure.attribute) {\n    proc = attributes[token.action];\n\n    if (proc === attributes.equals && token.name === \"id\") {\n      //prefer ID selectors (eg. #ID)\n      proc = 9;\n    }\n\n    if (token.ignoreCase) {\n      //ignoreCase adds some overhead, prefer \"normal\" token\n      //this is a binary operation, to ensure it's still an int\n      proc >>= 1;\n    }\n  } else if (proc === procedure.pseudo) {\n    if (!token.data) {\n      proc = 3;\n    } else if (token.name === \"has\" || token.name === \"contains\") {\n      proc = 0; //expensive in any case\n    } else if (token.name === \"matches\" || token.name === \"not\") {\n      proc = 0;\n\n      for (var i = 0; i < token.data.length; i++) {\n        //TODO better handling of complex selectors\n        if (token.data[i].length !== 1) continue;\n        var cur = getProcedure(token.data[i][0]); //avoid executing :has or :contains\n\n        if (cur === 0) {\n          proc = 0;\n          break;\n        }\n\n        if (cur > proc) proc = cur;\n      }\n\n      if (token.data.length > 1 && proc > 0) proc -= 1;\n    } else {\n      proc = 1;\n    }\n  }\n\n  return proc;\n}","map":{"version":3,"names":["module","exports","sortByProcedure","procedure","require","attributes","__proto__","exists","equals","not","start","end","any","hyphen","element","arr","procs","map","getProcedure","i","length","procNew","j","token","proc","type","attribute","action","name","ignoreCase","pseudo","data","cur"],"sources":["/Users/navid/Documents/Final Project 2/vocab/node_modules/cheerio-without-node-native/node_modules/css-select/lib/sort.js"],"sourcesContent":["module.exports = sortByProcedure;\n\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\n\nvar attributes = {\n\t__proto__: null,\n\texists: 10,\n\tequals: 8,\n\tnot: 7,\n\tstart: 6,\n\tend: 6,\n\tany: 5,\n\thyphen: 4,\n\telement: 4\n};\n\nfunction sortByProcedure(arr){\n\tvar procs = arr.map(getProcedure);\n\tfor(var i = 1; i < arr.length; i++){\n\t\tvar procNew = procs[i];\n\n\t\tif(procNew < 0) continue;\n\n\t\tfor(var j = i - 1; j >= 0 && procNew < procs[j]; j--){\n\t\t\tvar token = arr[j + 1];\n\t\t\tarr[j + 1] = arr[j];\n\t\t\tarr[j] = token;\n\t\t\tprocs[j + 1] = procs[j];\n\t\t\tprocs[j] = procNew;\n\t\t}\n\t}\n}\n\nfunction getProcedure(token){\n\tvar proc = procedure[token.type];\n\n\tif(proc === procedure.attribute){\n\t\tproc = attributes[token.action];\n\n\t\tif(proc === attributes.equals && token.name === \"id\"){\n\t\t\t//prefer ID selectors (eg. #ID)\n\t\t\tproc = 9;\n\t\t}\n\n\t\tif(token.ignoreCase){\n\t\t\t//ignoreCase adds some overhead, prefer \"normal\" token\n\t\t\t//this is a binary operation, to ensure it's still an int\n\t\t\tproc >>= 1;\n\t\t}\n\t} else if(proc === procedure.pseudo){\n\t\tif(!token.data){\n\t\t\tproc = 3;\n\t\t} else if(token.name === \"has\" || token.name === \"contains\"){\n\t\t\tproc = 0; //expensive in any case\n\t\t} else if(token.name === \"matches\" || token.name === \"not\"){\n\t\t\tproc = 0;\n\t\t\tfor(var i = 0; i < token.data.length; i++){\n\t\t\t\t//TODO better handling of complex selectors\n\t\t\t\tif(token.data[i].length !== 1) continue;\n\t\t\t\tvar cur = getProcedure(token.data[i][0]);\n\t\t\t\t//avoid executing :has or :contains\n\t\t\t\tif(cur === 0){\n\t\t\t\t\tproc = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(cur > proc) proc = cur;\n\t\t\t}\n\t\t\tif(token.data.length > 1 && proc > 0) proc -= 1;\n\t\t} else {\n\t\t\tproc = 1;\n\t\t}\n\t}\n\treturn proc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}