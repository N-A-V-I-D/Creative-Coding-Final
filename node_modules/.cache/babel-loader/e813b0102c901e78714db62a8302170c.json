{"ast":null,"code":"var _ = require('lodash'),\n    parse = require('../parse'),\n    $ = require('../static'),\n    updateDOM = parse.update,\n    evaluate = parse.evaluate,\n    utils = require('../utils'),\n    domEach = utils.domEach,\n    cloneDom = utils.cloneDom,\n    isHtml = utils.isHtml,\n    slice = Array.prototype.slice; // Create an array of nodes, recursing into arrays and parsing strings if\n// necessary\n\n\nexports._makeDomArray = function makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  } else if (elem.cheerio) {\n    return clone ? cloneDom(elem.get(), elem.options) : elem.get();\n  } else if (Array.isArray(elem)) {\n    return _.flatten(elem.map(function (el) {\n      return this._makeDomArray(el, clone);\n    }, this));\n  } else if (typeof elem === 'string') {\n    return evaluate(elem, this.options);\n  } else {\n    return clone ? cloneDom([elem]) : [elem];\n  }\n};\n\nvar _insert = function (concatenator) {\n  return function () {\n    var elems = slice.call(arguments),\n        lastIdx = this.length - 1;\n    return domEach(this, function (i, el) {\n      var dom, domSrc;\n\n      if (typeof elems[0] === 'function') {\n        domSrc = elems[0].call(el, i, $.html(el.children));\n      } else {\n        domSrc = elems;\n      }\n\n      dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n};\n/*\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @param {Array} array Target array to splice.\n * @param {Number} spliceIdx Index at which to begin changing the array.\n * @param {Number} spliceCount Number of elements to remove from the array.\n * @param {Array} newElems Elements to insert into the array.\n *\n * @api private\n */\n\n\nvar uniqueSplice = function (array, spliceIdx, spliceCount, newElems, parent) {\n  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),\n      prev = array[spliceIdx - 1] || null,\n      next = array[spliceIdx] || null;\n  var idx, len, prevIdx, node, oldParent; // Before splicing in new elements, ensure they do not already appear in the\n  // current array.\n\n  for (idx = 0, len = newElems.length; idx < len; ++idx) {\n    node = newElems[idx];\n    oldParent = node.parent || node.root;\n    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);\n\n    if (oldParent && prevIdx > -1) {\n      oldParent.children.splice(prevIdx, 1);\n\n      if (parent === oldParent && spliceIdx > prevIdx) {\n        spliceArgs[0]--;\n      }\n    }\n\n    node.root = null;\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next || null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev || null;\n    }\n\n    node.prev = newElems[idx - 1] || prev;\n    node.next = newElems[idx + 1] || next;\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n\n  return array.splice.apply(array, spliceArgs);\n};\n\nexports.appendTo = function (target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.append(this);\n  return this;\n};\n\nexports.prependTo = function (target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.prepend(this);\n  return this;\n};\n\nexports.append = _insert(function (dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\nexports.prepend = _insert(function (dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nexports.wrap = function (wrapper) {\n  var wrapperFn = typeof wrapper === 'function' && wrapper,\n      lastIdx = this.length - 1;\n\n  _.forEach(this, _.bind(function (el, i) {\n    var parent = el.parent || el.root,\n        siblings = parent.children,\n        dom,\n        index;\n\n    if (!parent) {\n      return;\n    }\n\n    if (wrapperFn) {\n      wrapper = wrapperFn.call(el, i);\n    }\n\n    if (typeof wrapper === 'string' && !isHtml(wrapper)) {\n      wrapper = this.parents().last().find(wrapper).clone();\n    }\n\n    dom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);\n    index = siblings.indexOf(el);\n    updateDOM([el], dom[0]); // The previous operation removed the current element from the `siblings`\n    // array, so the `dom` array can be inserted without removing any\n    // additional elements.\n\n    uniqueSplice(siblings, index, 0, dom, parent);\n  }, this));\n\n  return this;\n};\n\nexports.after = function () {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n  domEach(this, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc,\n        dom; // If not found, move on\n\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx); // Add element after `this` element\n\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n  return this;\n};\n\nexports.insertAfter = function (target) {\n  var clones = [],\n      self = this;\n\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function (i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el); // If not found, move on\n\n    if (index < 0) return; // Add cloned `this` element(s) after target element\n\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.before = function () {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n  domEach(this, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc,\n        dom; // If not found, move on\n\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx); // Add element before `el` element\n\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n  return this;\n};\n\nexports.insertBefore = function (target) {\n  var clones = [],\n      self = this;\n\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function (i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el); // If not found, move on\n\n    if (index < 0) return; // Add cloned `this` element(s) after target element\n\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n/*\n  remove([selector])\n*/\n\n\nexports.remove = function (selector) {\n  var elems = this; // Filter if we have selector\n\n  if (selector) elems = elems.filter(selector);\n  domEach(elems, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n    if (index < 0) return;\n    siblings.splice(index, 1);\n\n    if (el.prev) {\n      el.prev.next = el.next;\n    }\n\n    if (el.next) {\n      el.next.prev = el.prev;\n    }\n\n    el.prev = el.next = el.parent = el.root = null;\n  });\n  return this;\n};\n\nexports.replaceWith = function (content) {\n  var self = this;\n  domEach(this, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),\n        index; // In the case that `dom` contains nodes that already exist in other\n    // structures, ensure those nodes are properly removed.\n\n\n    updateDOM(dom, null);\n    index = siblings.indexOf(el); // Completely remove old element\n\n    uniqueSplice(siblings, index, 1, dom, parent);\n    el.parent = el.prev = el.next = el.root = null;\n  });\n  return this;\n};\n\nexports.empty = function () {\n  domEach(this, function (i, el) {\n    _.each(el.children, function (el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    el.children.length = 0;\n  });\n  return this;\n};\n/**\n * Set/Get the HTML\n */\n\n\nexports.html = function (str) {\n  if (str === undefined) {\n    if (!this[0] || !this[0].children) return null;\n    return $.html(this[0].children, this.options);\n  }\n\n  var opts = this.options;\n  domEach(this, function (i, el) {\n    _.each(el.children, function (el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts);\n    updateDOM(content, el);\n  });\n  return this;\n};\n\nexports.toString = function () {\n  return $.html(this, this.options);\n};\n\nexports.text = function (str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return $.text(this);\n  } else if (typeof str === 'function') {\n    // Function support\n    return domEach(this, function (i, el) {\n      var $el = [el];\n      return exports.text.call($el, str.call(el, i, $.text($el)));\n    });\n  } // Append text node to each selected elements\n\n\n  domEach(this, function (i, el) {\n    _.each(el.children, function (el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var elem = {\n      data: '' + str,\n      type: 'text',\n      parent: el,\n      prev: null,\n      next: null,\n      children: []\n    };\n    updateDOM(elem, el);\n  });\n  return this;\n};\n\nexports.clone = function () {\n  return this._make(cloneDom(this.get(), this.options));\n};","map":{"version":3,"names":["_","require","parse","$","updateDOM","update","evaluate","utils","domEach","cloneDom","isHtml","slice","Array","prototype","exports","_makeDomArray","makeDomArray","elem","clone","cheerio","get","options","isArray","flatten","map","el","_insert","concatenator","elems","call","arguments","lastIdx","length","i","dom","domSrc","html","children","uniqueSplice","array","spliceIdx","spliceCount","newElems","parent","spliceArgs","concat","prev","next","idx","len","prevIdx","node","oldParent","root","indexOf","splice","apply","appendTo","target","constructor","_originalRoot","append","prependTo","prepend","wrap","wrapper","wrapperFn","forEach","bind","siblings","index","parents","last","find","after","insertAfter","clones","self","remove","clonedSelf","push","before","insertBefore","selector","filter","replaceWith","content","empty","each","str","undefined","opts","toString","text","$el","data","type","_make"],"sources":["/Users/navid/Documents/Final Project 2/vocab/node_modules/cheerio-without-node-native/lib/api/manipulation.js"],"sourcesContent":["var _ = require('lodash'),\n    parse = require('../parse'),\n    $ = require('../static'),\n    updateDOM = parse.update,\n    evaluate = parse.evaluate,\n    utils = require('../utils'),\n    domEach = utils.domEach,\n    cloneDom = utils.cloneDom,\n    isHtml = utils.isHtml,\n    slice = Array.prototype.slice;\n\n// Create an array of nodes, recursing into arrays and parsing strings if\n// necessary\nexports._makeDomArray = function makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  } else if (elem.cheerio) {\n    return clone ? cloneDom(elem.get(), elem.options) : elem.get();\n  } else if (Array.isArray(elem)) {\n    return _.flatten(elem.map(function(el) {\n      return this._makeDomArray(el, clone);\n    }, this));\n  } else if (typeof elem === 'string') {\n    return evaluate(elem, this.options);\n  } else {\n    return clone ? cloneDom([elem]) : [elem];\n  }\n};\n\nvar _insert = function(concatenator) {\n  return function() {\n    var elems = slice.call(arguments),\n        lastIdx = this.length - 1;\n\n    return domEach(this, function(i, el) {\n      var dom, domSrc;\n\n      if (typeof elems[0] === 'function') {\n        domSrc = elems[0].call(el, i, $.html(el.children));\n      } else {\n        domSrc = elems;\n      }\n\n      dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n};\n\n/*\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @param {Array} array Target array to splice.\n * @param {Number} spliceIdx Index at which to begin changing the array.\n * @param {Number} spliceCount Number of elements to remove from the array.\n * @param {Array} newElems Elements to insert into the array.\n *\n * @api private\n */\nvar uniqueSplice = function(array, spliceIdx, spliceCount, newElems, parent) {\n  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),\n      prev = array[spliceIdx - 1] || null,\n      next = array[spliceIdx] || null;\n  var idx, len, prevIdx, node, oldParent;\n\n  // Before splicing in new elements, ensure they do not already appear in the\n  // current array.\n  for (idx = 0, len = newElems.length; idx < len; ++idx) {\n    node = newElems[idx];\n    oldParent = node.parent || node.root;\n    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);\n\n    if (oldParent && prevIdx > -1) {\n      oldParent.children.splice(prevIdx, 1);\n      if (parent === oldParent && spliceIdx > prevIdx) {\n        spliceArgs[0]--;\n      }\n    }\n\n    node.root = null;\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next || null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev || null;\n    }\n\n    node.prev = newElems[idx - 1] || prev;\n    node.next = newElems[idx + 1] || next;\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice.apply(array, spliceArgs);\n};\n\nexports.appendTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.append(this);\n\n  return this;\n};\n\nexports.prependTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.prepend(this);\n\n  return this;\n};\n\nexports.append = _insert(function(dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n\nexports.prepend = _insert(function(dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nexports.wrap = function(wrapper) {\n  var wrapperFn = typeof wrapper === 'function' && wrapper,\n      lastIdx = this.length - 1;\n\n  _.forEach(this, _.bind(function(el, i) {\n    var parent = el.parent || el.root,\n        siblings = parent.children,\n        dom, index;\n\n    if (!parent) {\n      return;\n    }\n\n    if (wrapperFn) {\n      wrapper = wrapperFn.call(el, i);\n    }\n\n    if (typeof wrapper === 'string' && !isHtml(wrapper)) {\n      wrapper = this.parents().last().find(wrapper).clone();\n    }\n\n    dom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);\n    index = siblings.indexOf(el);\n\n    updateDOM([el], dom[0]);\n    // The previous operation removed the current element from the `siblings`\n    // array, so the `dom` array can be inserted without removing any\n    // additional elements.\n    uniqueSplice(siblings, index, 0, dom, parent);\n  }, this));\n\n  return this;\n};\n\nexports.after = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertAfter = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.before = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertBefore = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\n/*\n  remove([selector])\n*/\nexports.remove = function(selector) {\n  var elems = this;\n\n  // Filter if we have selector\n  if (selector)\n    elems = elems.filter(selector);\n\n  domEach(elems, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    if (index < 0) return;\n\n    siblings.splice(index, 1);\n    if (el.prev) {\n      el.prev.next = el.next;\n    }\n    if (el.next) {\n      el.next.prev = el.prev;\n    }\n    el.prev = el.next = el.parent = el.root = null;\n  });\n\n  return this;\n};\n\nexports.replaceWith = function(content) {\n  var self = this;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),\n        index;\n\n    // In the case that `dom` contains nodes that already exist in other\n    // structures, ensure those nodes are properly removed.\n    updateDOM(dom, null);\n\n    index = siblings.indexOf(el);\n\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    el.parent = el.prev = el.next = el.root = null;\n  });\n\n  return this;\n};\n\nexports.empty = function() {\n  domEach(this, function(i, el) {\n    _.each(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    el.children.length = 0;\n  });\n  return this;\n};\n\n/**\n * Set/Get the HTML\n */\nexports.html = function(str) {\n  if (str === undefined) {\n    if (!this[0] || !this[0].children) return null;\n    return $.html(this[0].children, this.options);\n  }\n\n  var opts = this.options;\n\n  domEach(this, function(i, el) {\n    _.each(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts);\n\n    updateDOM(content, el);\n  });\n\n  return this;\n};\n\nexports.toString = function() {\n  return $.html(this, this.options);\n};\n\nexports.text = function(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return $.text(this);\n  } else if (typeof str === 'function') {\n    // Function support\n    return domEach(this, function(i, el) {\n      var $el = [el];\n      return exports.text.call($el, str.call(el, i, $.text($el)));\n    });\n  }\n\n  // Append text node to each selected elements\n  domEach(this, function(i, el) {\n    _.each(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var elem = {\n      data: '' + str,\n      type: 'text',\n      parent: el,\n      prev: null,\n      next: null,\n      children: []\n    };\n\n    updateDOM(elem, el);\n  });\n\n  return this;\n};\n\nexports.clone = function() {\n  return this._make(cloneDom(this.get(), this.options));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}